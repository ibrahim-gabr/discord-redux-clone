{"version":3,"sources":["ChatHeader.jsx","Message.jsx","firebase.js","features/appSlice.js","features/userSlice.js","Chat.jsx","Login.jsx","SidebarChannel.jsx","Sidebar.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["ChatHeader","channelName","className","type","placeholder","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Message","user","message","Avatar","src","photo","displayName","Date","timestamp","toDate","toUTCString","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","appSlice","createSlice","name","initialState","channelId","channel","reducers","setChannel","state","action","payload","id","actions","selectChannelId","app","selectChannel","userSlice","loginUser","logout","selectUser","Chat","useState","messages","setMessages","useSelector","input","setInput","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","value","onChange","e","target","disabled","onClick","preventDefault","add","FieldValue","serverTimestamp","handleSubmit","fontSize","Login","alt","signInWithPopup","catch","error","alert","SidebarChannel","dispatch","useDispatch","Sidebar","channels","setChannels","prompt","signOut","App","onAuthStateChanged","authuser","uid","photoURL","email","configureStore","reducer","userReducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b34c4450.chunk.js","sourcesContent":["import React from 'react'\nimport SendIcon from '@material-ui/icons/Send';\nimport HelpIcon from '@material-ui/icons/Help';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nfunction ChatHeader({channelName}) {\n    return (\n      <>\n        <div className=\"chat__header absolute w-full top-0 bg-gray-800 z-10 flex px-4 py-4 justify-between \">\n          <div className=\"flex-1 flex\">\n            <p className=\"text-gray-600\">#</p>\n            <h3 className=\"text-white ml-2 \">{channelName ? channelName : ''}</h3>\n          </div>\n          <div className=\"flex text-gray-400 justify-between px-4\">\n            <div className=\"flex justify-between px-4\">\n              <NotificationsIcon />\n              <LocationOnIcon />\n              <PeopleAltIcon />\n            </div>\n            <div className=\"flex  bg-gray-900 px-2\">\n              <input\n                type=\"text\"\n                placeholder=\"Search \"\n                className=\"px-1 bg-transparent\"\n              />\n              <svg\n                className=\"h-6 w-6\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                />\n              </svg>\n            </div>\n            <div className=\"flex  justify-between px-2\">\n              <SendIcon />\n              <HelpIcon />\n            </div>\n          </div>\n        </div>\n      </>\n    );\n}\n\nexport default ChatHeader\n","import { Avatar } from '@material-ui/core'\nimport React from 'react'\n\nfunction Message({ user, message }) {\n    return (\n        <div className='messages flex justify-between p-4 w-full '>\n            <Avatar src={ user.photo}/>\n            <div className='message__info flex flex-col flex-1 pl-3'>\n                <div className='flex '>\n                    <h4 className='text-white'>{ user.displayName}</h4>\n                    <p className='text-gray-400 pl-3'>{\n                        new Date(message.timestamp?.toDate()).toUTCString()}</p>\n                </div>\n                <div className='text-gray-400'>\n                    <p>{ message.message}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import firebase from 'firebase'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAmnv9qj478IDVe8RIWs8S3HvgiJYrqTYQ\",\n  authDomain: \"discord-redux-clone-18a1b.firebaseapp.com\",\n  projectId: \"discord-redux-clone-18a1b\",\n  storageBucket: \"discord-redux-clone-18a1b.appspot.com\",\n  messagingSenderId: \"5519509974\",\n  appId: \"1:5519509974:web:35527813b957999525fc77\"\n};\n\nconst app = firebase.initializeApp(firebaseConfig)\n\nconst db = app.firestore()\n\nconst auth = firebase.auth()\n\nconst provider = new firebase.auth.GoogleAuthProvider()\n\nexport { auth, provider }\n\nexport default db;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState: {\n      channelId: null,\n      channel:null\n  },\n  reducers: {\n    setChannel: (state , action) => {\n      state.channelId = action.payload.id;\n      state.channel= action.payload.channel\n    },\n  },\n});\n\nexport const { setChannel  } = appSlice.actions;\n\nexport const selectChannelId = state => state.app.channelId;\nexport const selectChannel = state => state.app.channel;\n\nexport default appSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    loginUser: (state , action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: state => {\r\n      state.user = null\r\n    }\r\n  },\r\n});\r\n\r\nexport const { loginUser , logout } = userSlice.actions;\r\n\r\nexport const selectUser = state => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import React, { useEffect } from 'react'\nimport ChatHeader from './ChatHeader'\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message';\nimport { useSelector } from \"react-redux\";\nimport db from './firebase'\nimport firebase from 'firebase'\nimport {\n  setChannel,\n  selectChannelId,\n  selectChannel,\n} from \"./features/appSlice\";\nimport { useState } from 'react';\nimport { selectUser } from './features/userSlice';\n\nfunction Chat() {\n\n    const [messages , setMessages]  = useState([])\n    const channel = useSelector(selectChannel)\n    const channelId = useSelector(selectChannelId);\n    const user = useSelector(selectUser);\n    const [input, setInput] = useState(\"\");\n\n    useEffect(() => {\n      if (channelId) {\n        db.collection(\"channels\")\n          .doc(channelId)\n          .collection(\"messages\")\n          .orderBy(\"timestamp\", \"desc\")\n          .onSnapshot((snapshot) => {\n            setMessages(snapshot.docs.map((doc) => doc.data()));\n          });\n      }\n    }, [channelId]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        db.collection(\"channels\").doc(channelId).collection(\"messages\")\n            .add({\n                message: input,\n                user: user,\n                timestamp:firebase.firestore.FieldValue.serverTimestamp()\n            });\n        setInput('')\n    }\n\n    return (\n      <div className=\"col-span-3 max-h-screen chat relative lg:col-span-4 flex flex-col justify-center \">\n        <ChatHeader channelName={channel?.channelName} />\n        <div className=\"chat__messages flex-1 overflow-scroll w-full\">\n          {messages?.map((message) => (\n            <Message user={user} message={message} />\n          ))}\n        </div>\n        <div className=\"chat__input absolute bottom-0 flex justify-between z-10   bg-gray-700 p-4 w-full\">\n          <div className=\"flex-1 flex \">\n            <AddCircleIcon className=\"text-white\" />\n            <form className=\"pl-2 flex-1\">\n              <input\n                value={input}\n                className=\"w-full outline-none text-white bg-transparent\"\n                            placeholder={`message #${channel?.channelName ? channel.channelName : 'channel' }`}\n                            type='text'\n                onChange={(e) => setInput(e.target.value)}\n                disabled={!channelId}\n              />\n              <button\n                type=\"submit\"\n                className=\"hidden\"\n                onClick={(e) => handleSubmit(e)}\n                disabled={!channelId}\n              >\n                Send Message\n              </button>\n            </form>\n          </div>\n          <div className=\"flex text-white \">\n            <CardGiftcardIcon fontSize=\"Large\" />\n            <GifIcon fontSize=\"Large\" />\n            <EmojiEmotionsIcon fontSize=\"Large\" />\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default Chat\n","import React from 'react'\nimport { auth , provider } from './firebase'\nfunction Login() {\n\n    const signIn = () => {\n        auth.signInWithPopup(provider)\n        .catch(error => alert(error.message))\n    }\n    return (\n        <div className='grid place-items-center'>\n            <img src=\"./discord.png\" alt=\"\" />\n            <button onClick={signIn} className='bg-indigo-400 text-white px-16 py-2 text-xl hover:bg-indigo-700'>Login</button>\n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport { useDispatch } from \"react-redux\";\nimport {\n  setChannel,\n  selectChannelId,\n  selectChannelName,\n} from \"./features/appSlice\";\nfunction SidebarChannel({ channel, id }) {\n\n     const dispatch = useDispatch()\n    const handleSelectChannel = () => {\n         dispatch(\n           setChannel({\n             id,\n             channel: channel\n           })\n         );\n    }\n\n    return (\n        <div className='sidebar__channel my-2 flex pl-4 flex-1 hover:text-white hover:bg-gray-600 text-lg py-3' onClick={handleSelectChannel}>\n            <span className=' '>#</span>\n            <h3 className='pl-2'>{channel.channelName}</h3>\n        </div>\n    )\n}\n\nexport default SidebarChannel\n","import { Avatar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport db, { auth } from \"./firebase\";\nimport SidebarChannel from \"./SidebarChannel\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport SignalCellularAltIcon from \"@material-ui/icons/SignalCellularAlt\";\nimport {useDispatch} from 'react-redux'\nimport {\n  setChannel,\n  selectChannelId,\n  selectChannel,\n} from \"./features/appSlice\";\n\nfunction Sidebar() {\n  const user = useSelector(selectUser);\n    const [channels, setChannels] = useState([]);\n    const dispatch = useDispatch()\n    \n  const handleAddChannel = () => {\n    const channelName = prompt(\"Please Enter channel name : \");\n    db.collection(\"channels\").add({\n      channelName,\n    });\n  };\n  useEffect(() => {\n    db.collection(\"channels\").onSnapshot((snapshot) => {\n      setChannels(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          channel: doc.data(),\n        }))\n      );\n   \n    });\n  }, []);\n  return (\n    <>\n      <div className=\"sidebar sticky top-0  flex flex-col col-span-2 lg:col-span-1 h-screen bg-gray-900\">\n        <div className=\"sidebar__top text-white flex justify-between  p-4 border-gray-600 border-b-2\">\n          <h3>Clever Programmer</h3>\n          <span className=\"sidebar__top__icon \">\n         <ExpandMoreIcon />\n          </span>\n        </div>\n        <div className=\"sidebar__channels flex-1\">\n          <div className=\"sidebar__channelheaders text-gray-500 flex justify-between p-4\">\n            <ExpandMoreIcon />\n            <h3>Text Channels</h3>\n            <AddIcon onClick={handleAddChannel} />\n          </div>\n          <div className=\"sidebar__channellists text-gray-500 flex flex-col justify-items-start\">\n            {channels.map(({ id, channel }) => (\n              <SidebarChannel key={id} id={id} channel={channel} />\n            ))}\n          </div>\n        </div>\n\n        <div className=\"sidebar__voice flex justify-between items-center border-t-2 border-b-2 border-gray-500 text-green-500 h-32 px-2 py-1\">\n          <div className=\"mr-1\">\n            <SignalCellularAltIcon />\n          </div>\n          <div className=\"flex flex-col \">\n            <h3>Voice Connected</h3>\n            <p className=\"text-gray-600\">Stream</p>\n          </div>\n          <div className=\"flex flex-col ml-1\">\n            <InfoOutlinedIcon />\n            <PhoneIcon />\n          </div>\n        </div>\n\n        <div className=\"sidebar__profile h-32 flex justify-between p-2 items-center\">\n          <Avatar\n            src={user.photo}\n            onClick={() => auth.signOut()}\n            className=\"mr-1\"\n          />\n\n          <div className=\"text-white text-base\">\n            <h3>@{user.displayName}</h3>\n            <p>#ThisisMyId</p>\n          </div>\n          <div className=\"flex justify-evenly flex-col items-center text-gray-600 ml-1\">\n            <MicIcon />\n            <SettingsIcon />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Sidebar;\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './App.css';\r\nimport Chat from './Chat';\r\nimport { loginUser,logout , selectUser } from './features/userSlice';\r\nimport Login from './Login';\r\nimport Sidebar from './Sidebar';\r\nimport {auth} from './firebase'\r\n\r\nfunction App() {\r\n\r\n  const user = useSelector(selectUser)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((authuser) => {\r\n     \r\n      if (authuser) {\r\n        dispatch(loginUser({\r\n          uid: authuser.uid,\r\n          photo: authuser.photoURL,\r\n          email: authuser.email,\r\n          displayName:authuser.displayName\r\n        }))\r\n      } else {\r\n        dispatch(logout())\r\n      }\r\n    })\r\n  \r\n  }, [dispatch])\r\n\r\n  return (\r\n    <>\r\n      {user ?   <div className=\"app grid grid-cols-5 bg-gray-800 \">\r\n              <Sidebar />\r\n              <Chat />\r\n      </div> \r\n        :\r\n      <Login />\r\n    }\r\n      </>\r\n  \r\n  \r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\nimport appReducer from '../features/appSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    app:appReducer\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}